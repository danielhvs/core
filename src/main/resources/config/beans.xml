<?xml version="1.0" encoding="ISO-8859-1"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
                      
	<bean name="App" class="br.com.danielhabib.core.App">
		<property name="levelHandler" ref="levelHandler"></property>
	</bean>                      
                           
	<!-- DirectionHandler -->
	<bean name="directionHandler" class="br.com.danielhabib.core.rules.DirectionHandler" scope="prototype">
		<property name="direction" value="RIGHT"/>
		<property name="directionsMap">
			<util:map id="directionsMap" map-class="java.util.HashMap"
				key-type="br.com.danielhabib.core.rules.Direction" value-type="br.com.danielhabib.core.rules.Direction">
				<entry key="RIGHT" value="UP" />
				<entry key="UP" value="LEFT" />
				<entry key="LEFT" value="DOWN" />
				<entry key="DOWN" value="RIGHT" />
			</util:map>
		</property>
	</bean>
	
	<!-- ImageHandler -->
	<bean name="imageHandler" class="br.com.danielhabib.core.rules.ImageHandler">
		<property name="imagesMap" ref="imagesMap"></property>
	</bean>

	<util:map id="imagesMap" map-class="java.util.HashMap" key-type="br.com.danielhabib.core.rules.Direction" value-type="java.io.File">
		<entry key="RIGHT" value-ref="imageRight"/>
		<entry key="UP" value-ref="imageUp" />
		<entry key="LEFT" value-ref="imageLeft" />
		<entry key="DOWN" value-ref="imageDown" />
	</util:map>
	<bean name="imageDown" class="java.io.File"><constructor-arg value="images/psico_down.png"/></bean>
	<bean name="imageUp" class="java.io.File"><constructor-arg value="images/psico_up.png"/></bean>
	<bean name="imageLeft" class="java.io.File"><constructor-arg value="images/psico_left.png"/></bean>
	<bean name="imageRight" class="java.io.File"><constructor-arg value="images/psico_right.png"/></bean>
	
	
	<!-- MoveHandler -->
	<bean name="moveHandler" class="br.com.danielhabib.core.rules.RegularMoveHandler" scope="prototype">
		<property name="speedMap" ref="speedMap"/>
	</bean>
	
	<util:map id="speedMap" map-class="java.util.HashMap" key-type="br.com.danielhabib.core.rules.Direction" value-type="br.com.danielhabib.core.component.Position">
		<entry key="RIGHT" value-ref="rightSpeed"/>
		<entry key="UP" value-ref="upSpeed" />
		<entry key="LEFT" value-ref="leftSpeed" />
		<entry key="DOWN" value-ref="downSpeed" />
	</util:map>
	<bean name="upSpeed" class="br.com.danielhabib.core.component.Position">
		<constructor-arg value="0"/><constructor-arg value="-1"/>
	</bean>
	<bean name="downSpeed" class="br.com.danielhabib.core.component.Position">
		<constructor-arg value="0"/><constructor-arg value="1"/>
	</bean>
	<bean name="leftSpeed" class="br.com.danielhabib.core.component.Position">
		<constructor-arg value="-1"/><constructor-arg value="0"/>
	</bean>
	<bean name="rightSpeed" class="br.com.danielhabib.core.component.Position">
		<constructor-arg value="1"/><constructor-arg value="0"/>
	</bean>
	
	<!-- LevelParser -->
	<bean name="levelHandler" class="br.com.danielhabib.core.component.LevelHandler">
	<property name="files">
		<list>
			<bean name="level1" class="java.io.File"><constructor-arg value="levels/level_1.txt"/></bean>
			<bean name="level2" class="java.io.File"><constructor-arg value="levels/level_2.txt"/></bean>
			<bean name="level3" class="java.io.File"><constructor-arg value="levels/level_3.txt"/></bean>
		</list>
	</property>
	</bean>
	
	<!-- Component Builders -->
	<bean name="componentBuilder" class="br.com.danielhabib.core.builder.PsicoComponentBuilder">
		<property name="map">
			<util:map id="componentBuilderMap" map-class="java.util.HashMap" key-type="java.lang.Character" value-type="br.com.danielhabib.core.builder.ATypeBuilder">
			    <entry key="w" value-ref="wallBuilder"/>
			    <entry key="o" value-ref="ballBuilder"/>
			    <entry key="g" value-ref="goalBuilder"/>
			</util:map>
		</property>
	</bean>
	
	<bean name="goalBuilder" class="br.com.danielhabib.core.builder.GoalBuilder">
		<property name="colorBuilder" ref="goalColorBuilder" />
		<property name="size" ref="configSize"/>
	</bean>	
	
	<bean name="ballBuilder" class="br.com.danielhabib.core.builder.BallBuilder">
		<property name="colorBuilder" ref="ballColorBuilder" />
		<property name="size" value="#{configSize/2}"/>
	</bean>

	<bean name="wallBuilder" class="br.com.danielhabib.core.builder.WallBuilder">
		<property name="colorBuilder" ref="wallColorBuilder" />
		<property name="size" ref="configSize"/>
	</bean>
	
	<bean name="configSize" class="java.lang.Integer">
		<constructor-arg value="64" />
     </bean>

	<!-- Color Builders -->
	<bean name="wallColorBuilder" class="br.com.danielhabib.core.builder.ColorBuilder">
		<constructor-arg>
			<list>
				<util:constant static-field="java.awt.Color.BLUE" />
				<util:constant static-field="java.awt.Color.YELLOW" />
				<util:constant static-field="java.awt.Color.ORANGE" />
				<util:constant static-field="java.awt.Color.RED" />
				<util:constant static-field="java.awt.Color.CYAN" />
				<util:constant static-field="java.awt.Color.GREEN" />
			</list>
		</constructor-arg>
	</bean>

	<bean name="ballColorBuilder" class="br.com.danielhabib.core.builder.ColorBuilder">
		<constructor-arg>
			<list>
				<util:constant static-field="java.awt.Color.BLUE" />
				<util:constant static-field="java.awt.Color.RED" />
				<util:constant static-field="java.awt.Color.ORANGE" />
				<util:constant static-field="java.awt.Color.CYAN" />
				<util:constant static-field="java.awt.Color.GREEN" />
				<util:constant static-field="java.awt.Color.YELLOW" />
			</list>
		</constructor-arg>
	</bean>
	
	<bean name="goalColorBuilder" class="br.com.danielhabib.core.builder.ColorBuilder">
		<constructor-arg>
			<list>
				<util:constant static-field="java.awt.Color.ORANGE" />
				<util:constant static-field="java.awt.Color.BLUE" />
				<util:constant static-field="java.awt.Color.YELLOW" />
				<util:constant static-field="java.awt.Color.GREEN" />
				<util:constant static-field="java.awt.Color.CYAN" />
				<util:constant static-field="java.awt.Color.RED" />
			</list>
		</constructor-arg>
	</bean>
	
	

</beans>